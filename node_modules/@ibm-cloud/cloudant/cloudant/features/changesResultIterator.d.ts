/**
 * Â© Copyright IBM Corporation 2022, 2023. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { Mode } from './changesParamsHelper';
import { default as CloudantV1, PostChangesParams } from '../v1';
export declare class ChangesResultIterableIterator implements AsyncIterableIterator<CloudantV1.ChangesResult> {
    private readonly timeoutPromise;
    private readonly cancelToken;
    private readonly client;
    private readonly doneResult;
    private readonly errorTolerance?;
    private readonly logger;
    private readonly mode;
    private readonly promisedConfig;
    private readonly transientErrorSuppression;
    private readonly baseDelay;
    private readonly expRetryGate;
    private cancel;
    private countDown;
    private inflight;
    private params;
    private pending;
    private since;
    private stopped;
    private successTimestamp;
    private retry;
    /** @internal */
    static BATCH_SIZE: number;
    constructor(client: CloudantV1, params: PostChangesParams, mode: Mode, errorTolerance?: number);
    configure(): Promise<void>;
    [Symbol.asyncIterator](): AsyncIterableIterator<CloudantV1.ChangesResult>;
    return(value?: any): Promise<IteratorResult<CloudantV1.ChangesResult>>;
    next(value?: any): Promise<IteratorResult<CloudantV1.ChangesResult>>;
}
