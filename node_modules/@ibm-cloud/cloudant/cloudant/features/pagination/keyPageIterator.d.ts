/**
 * Â© Copyright IBM Corporation 2025. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { BasePageIterator } from './basePageIterator';
import { default as CloudantV1, Response } from '../../v1';
export declare abstract class KeyPageIterator<P extends CloudantV1.PostAllDocsParams | CloudantV1.PostPartitionAllDocsParams | CloudantV1.PostDesignDocsParams | CloudantV1.PostViewParams | CloudantV1.PostPartitionViewParams, R extends CloudantV1.AllDocsResult | CloudantV1.ViewResult, I extends CloudantV1.DocsResultRow | CloudantV1.ViewResultRow> extends BasePageIterator<P, R, I> {
    private boundaryFailure;
    constructor(client: CloudantV1, params: P);
    protected abstract setNextKeyId(startKeyDocId: string): any;
    protected setNextKey(startKey: string): void;
    protected setLimit(limit: number): void;
    protected abstract getItems(result: R): Array<I>;
    protected abstract nextRequestFunction(): (params: P) => Promise<Response<R>>;
    protected setNextPageParams(result: R): void;
    protected nextRequest(): Promise<Array<I>>;
    protected getPageSize(params: P): number;
    protected abstract checkBoundary(penultimateItem: I, lastItem: I): any;
    protected validate(params: P): void;
}
