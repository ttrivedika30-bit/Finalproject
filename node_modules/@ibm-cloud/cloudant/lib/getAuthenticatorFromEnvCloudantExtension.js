"use strict";
/**
 * Â© Copyright IBM Corporation 2020, 2021. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.getAuthenticatorFromEnvCloudantExtension = getAuthenticatorFromEnvCloudantExtension;
const ibm_cloud_sdk_core_1 = require("ibm-cloud-sdk-core");
const auth_1 = require("../auth");
const COUCHDB_SESSION_AUTH_TYPE = 'couchdb_session';
/**
 * Extend the creating Authenticator from external configuration function with
 * CouchDB specific Session Authenticator possibility.
 *
 * @param {string} serviceName The service name prefix.
 *
 */
function getAuthenticatorFromEnvCloudantExtension(serviceName) {
    let auth;
    const credentials = (0, ibm_cloud_sdk_core_1.readExternalSources)(serviceName);
    let { authType } = credentials;
    if (!authType) {
        // this is the alternative "AUTHTYPE" config property
        authType = credentials.authtype || '';
    }
    if (authType.toLowerCase() === COUCHDB_SESSION_AUTH_TYPE) {
        auth = new auth_1.CouchdbSessionAuthenticator(credentials);
    }
    else {
        auth = (0, ibm_cloud_sdk_core_1.getAuthenticatorFromEnvironment)(serviceName);
    }
    return auth;
}
//# sourceMappingURL=getAuthenticatorFromEnvCloudantExtension.js.map